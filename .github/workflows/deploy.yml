name: Deploy to GitHub Pages

on:
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          cache: 'npm'
          
      - name: Clean install dependencies
        run: |
          rm -rf node_modules
          rm -f package-lock.json
          npm install --no-optional
        
      - name: Debug Environment Variables
        run: |
          echo "Checking if environment variables are set:"
          echo "VITE_FIREBASE_API_KEY exists: ${{ secrets.VITE_FIREBASE_API_KEY != '' }}"
          echo "VITE_FIREBASE_AUTH_DOMAIN exists: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN != '' }}"
          echo "VITE_FIREBASE_PROJECT_ID exists: ${{ secrets.VITE_FIREBASE_PROJECT_ID != '' }}"
          echo "VITE_FIREBASE_STORAGE_BUCKET exists: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET != '' }}"
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID exists: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID != '' }}"
          echo "VITE_FIREBASE_APP_ID exists: ${{ secrets.VITE_FIREBASE_APP_ID != '' }}"
          echo "VITE_FIREBASE_MEASUREMENT_ID exists: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID != '' }}"
          echo "VITE_GEMINI_API_KEY exists: ${{ secrets.VITE_GEMINI_API_KEY != '' }}"
        
      - name: Create production .env file
        run: |
          echo "VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}" > .env.production
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" >> .env.production
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}" >> .env.production
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" >> .env.production
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.production
          echo "VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}" >> .env.production
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}" >> .env.production
          echo "VITE_GEMINI_API_KEY=${{ secrets.VITE_GEMINI_API_KEY }}" >> .env.production
          cat .env.production | grep -v "API_KEY"  # Print env file for debugging (without API key)
        
      - name: Build
        run: npm run build:ci
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          VITE_GEMINI_API_KEY: ${{ secrets.VITE_GEMINI_API_KEY }}
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 